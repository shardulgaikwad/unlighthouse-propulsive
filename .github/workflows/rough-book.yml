name: Rough Book

on:
  workflow_dispatch:
    inputs:
      website_url:
        description: 'Webisite URL to be used in the workflow'
        required: true
      website_nickname:
        description: 'Webiste Nickname to be used in the workflow'
        required: true
      user_name:
        description: 'User Name to be used in the workflow'
        required: true
      user_email:
        description: 'User Email to be used in the workflow'
        required: true
      github_branch:
        description: 'GitHub Branch Name to be used in the workflow'
        required: true
jobs:
  roughBook:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.

      - name: Print GitHub Event Inputs
        run: |
          echo "GitHub Event Inputs:"
          echo "${{ toJson(github.event.inputs) }}" | yq eval 'map(.)' -
      
      - name: Create and Publish new github branch
        run: |
          git checkout -b ${{ github.event.inputs.github_branch }} main
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_GITHUB }}
          branch: ${{ github.event.inputs.github_branch }}

      - name: Install Dependencies
        run: npm add @unlighthouse/cli puppeteer

      - name: Install Global Dependencies
        run: npm install -g @unlighthouse/cli puppeteer

      - name: Unlighthouse assertions and client
        run: unlighthouse-ci --site ${{ github.event.inputs.website_url }} --build-static --urls /

      - name: Move reports to build folder
        run: mkdir build && mv ./.unlighthouse/* ./build/
        
      - name: Add Tracking Script
        run: sed -i '' '10i\ <script>\ function alertUser() {\ alert("Welcome to your website!");\ }\ window.onload = alertUser;\ </script> ' ./build/index.html

      - name: Deploy report to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "./build"
          production-branch: ${{ github.event.inputs.github_branch }}
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "New Release Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          github-deployment-environment: production
          github-deployment-description: "Deployment description from main.yml"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEMO_SITE_ID }}
        timeout-minutes: 1
